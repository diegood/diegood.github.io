//https://pusher.com/tutorials/push-notifications-node-service-workers

/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
//https://github.com/web-push-libs/web-push
//npm install web-push -g

//web-push generate-vapid-keys --json
{"publicKey":"BAw8rMw8Ijma2jjVWyLs6jU1I80JNpz0LlQ8QZ5MjbZHSOmvINTZ6q3mvi2myfXPdoYjNU8Bzi9kHgvX50Pwl3I","privateKey":"Dbkqh8fmfT7z34h7Auq2yr7PO4z9yoX6-Ad3SWoKwwo"}

{"endpoint":"https://fcm.googleapis.com/fcm/send/ecsV7FCAY98:APA91bGjBUPr92qJ_eYzpO5ABJjkuZIsay0UUOgVuYn64pKXA-zMQ0VPCfNkvtVEwQg71JG3V-Yh7GP8MSM63DOMxaZr02qbrZa1wEALDzmccUprskPMHJeKF_N_IC2CqiIZvzJfQ0OW","expirationTime":null,"keys":{"p256dh":"BMC3oy4TUue5_5iuo7OfHkQ0aN4nsl5DFfBM4rXAY1EfQsuST1_Dk8hfqfS8ZVFunTqF23c47E9XUQ2tOJAAToQ","auth":"Ymyh3MkEXqt6-aiFF9u2ag"}}

//web-push send-notification --endpoint="https://fcm.googleapis.com/fcm/send/ecsV7FCAY98:APA91bGjBUPr92qJ_eYzpO5ABJjkuZIsay0UUOgVuYn64pKXA-zMQ0VPCfNkvtVEwQg71JG3V-Yh7GP8MSM63DOMxaZr02qbrZa1wEALDzmccUprskPMHJeKF_N_IC2CqiIZvzJfQ0OW" --key="BMC3oy4TUue5_5iuo7OfHkQ0aN4nsl5DFfBM4rXAY1EfQsuST1_Dk8hfqfS8ZVFunTqF23c47E9XUQ2tOJAAToQ" --auth="Ymyh3MkEXqt6-aiFF9u2ag" --payload="HOLIS!!! COMO ESTAS!!!! 123" --ttl=0 --vapid-subject="mailto: danielsanchez68@hotmail.com" --vapid-pubkey="BAw8rMw8Ijma2jjVWyLs6jU1I80JNpz0LlQ8QZ5MjbZHSOmvINTZ6q3mvi2myfXPdoYjNU8Bzi9kHgvX50Pwl3I" --vapid-pvtkey="Dbkqh8fmfT7z34h7Auq2yr7PO4z9yoX6-Ad3SWoKwwo"


/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
//https://github.com/web-push-libs/web-push
//git clone https://github.com/web-push-libs/web-push
//cd web-push
//npm i

node src/cli generate-vapid-keys --json
node src/cli send-notification --endpoint="https://fcm.googleapis.com/fcm/send/ecsV7FCAY98:APA91bGjBUPr92qJ_eYzpO5ABJjkuZIsay0UUOgVuYn64pKXA-zMQ0VPCfNkvtVEwQg71JG3V-Yh7GP8MSM63DOMxaZr02qbrZa1wEALDzmccUprskPMHJeKF_N_IC2CqiIZvzJfQ0OW" --key="BMC3oy4TUue5_5iuo7OfHkQ0aN4nsl5DFfBM4rXAY1EfQsuST1_Dk8hfqfS8ZVFunTqF23c47E9XUQ2tOJAAToQ" --auth="Ymyh3MkEXqt6-aiFF9u2ag" --payload="HOLIS!!! COMO ESTAS!!!! 123" --ttl=0 --vapid-subject="mailto: danielsanchez68@hotmail.com" --vapid-pubkey="BAw8rMw8Ijma2jjVWyLs6jU1I80JNpz0LlQ8QZ5MjbZHSOmvINTZ6q3mvi2myfXPdoYjNU8Bzi9kHgvX50Pwl3I" --vapid-pvtkey="Dbkqh8fmfT7z34h7Auq2yr7PO4z9yoX6-Ad3SWoKwwo"


/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ---------- SW ---------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
self.addEventListener('push', event => {
    let datos = event.data.text()
    console.log(`Push recibido, datos: ${datos}`)

    const title = 'Super Lista'
    const options = {
        body: `Mensaje: ${datos}`,
        icon: 'images/icons/icon-72x72.png',
        badge: ''
    }
    event.waitUntil(self.registration.showNotification(title,options))
})

self.addEventListener('notificationclick', event => {
    console.log('Click en notificacion recibido')

    event.notification.close()
    event.waitUntil(clients.openWindow('https://www.hotmail.com'))
})


/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ---------- estilos.css --------------------------------------------------------------------------------------------------------------*/
/* ------------------------------------------------------------------------------------------------------------------------------------ */
pre {
    white-space: pre-wrap;
    background-color: #EEEEEE;
    padding: 16px;
}
  
pre code {
    word-break: break-word;
}

.is-invisible {
   opacity: 0;
}


/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ---------- html -------------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
<hr>

<section>
    <p>
        <button disabled
            class="js-push-btn mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect">
            Habilitar Notificaciones Push
        </button>
    </p>
    <div class="subscription-details js-subscription-details is-invisible">
        <pre><code class="js-subscription-json"></code></pre>
    </div>

</section>


/* ------------------------------------------------------------------------------------------------------------------------------------ */
/* ---------- main.js ----------------------------------------------------------------------------------------------------------------- */
/* ------------------------------------------------------------------------------------------------------------------------------------ */
function configurarSW() {
    if ('serviceWorker' in navigator && 'PushManager' in window) {
        console.log('Service worker y Push est치n soportados')

        navigator.serviceWorker.register('./sw.js')
            .then(function (reg) {
                console.log('Service Worker registrado Exit칩samente', reg);

                swRegistration = reg
                initialiseUI()

                Notification.requestPermission(function (res) {
                    if (res === 'granted') {
                        navigator.serviceWorker.ready.then(function (reg) {
                        })
                    }
                })
            })

            .catch(function (err) {
                console.log('Error registrando el Service Worker', err);
            });
    }
    else {
        console.warn('Sw 칩 Push no est치n soportados')
    }
}

// -----------------------------------------------------------------------------
//{"publicKey":"BHp3NNhJFU4ZVScqDYuRitqThyIfS6Xs5tq8S5p4Sg6x-JJS2alqPEY1vpSqmgeFMGuxsDNZ_mqqW7orTRUUtgA","privateKey":"ut2N62FYqb8bHl2QlS_iAhBtLp6w0M9mxPVwZRlHl7Q"}

const applicationServerPublicKey = 'BHp3NNhJFU4ZVScqDYuRitqThyIfS6Xs5tq8S5p4Sg6x-JJS2alqPEY1vpSqmgeFMGuxsDNZ_mqqW7orTRUUtgA'

const pushButton = document.querySelector('.js-push-btn');
let isSubscribed = false;
let swRegistration = null;

function urlB64ToUint8Array(base64String) {
    const padding = '='.repeat((4 - base64String.length % 4) % 4);
    const base64 = (base64String + padding)
        .replace(/\-/g, '+')
        .replace(/_/g, '/');

    const rawData = window.atob(base64);
    const outputArray = new Uint8Array(rawData.length);

    for (let i = 0; i < rawData.length; ++i) {
        outputArray[i] = rawData.charCodeAt(i);
    }
    //console.log(outputArray)
    return outputArray;
}


function updateBtn() {
    if (isSubscribed) {
        pushButton.textContent = 'DesHabilitar Notificaciones Push';
    } else {
        pushButton.textContent = 'Habilitar Notificaciones Push';
    }

    pushButton.disabled = false;
}

function updateSubscriptionOnServer(subscription) {
    // TODO: Send subscription to application server

    const subscriptionJson = document.querySelector('.js-subscription-json');
    const subscriptionDetails =
        document.querySelector('.js-subscription-details');

    if (subscription) {
        subscriptionJson.textContent = JSON.stringify(subscription);
        subscriptionDetails.classList.remove('is-invisible');
    } else {
        subscriptionDetails.classList.add('is-invisible');
    }
}


function subscribeUser() {
    const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);
    swRegistration.pushManager.subscribe({
        userVisibleOnly: true,
        applicationServerKey: applicationServerKey
    })
        .then(function (subscription) {
            console.log('User is subscribed:', subscription);

            updateSubscriptionOnServer(subscription);

            isSubscribed = true;

            updateBtn();
        })
        .catch(function (err) {
            console.log('Failed to subscribe the user: ', err);
            updateBtn();
        });
}


function unsubscribeUser() {
    swRegistration.pushManager.getSubscription()
        .then(function (subscription) {
            if (subscription) {
                return subscription.unsubscribe();
            }
        })
        .catch(function (error) {
            console.log('Error unsubscribing', error);
        })
        .then(function () {
            updateSubscriptionOnServer(null);

            console.log('User is unsubscribed.');
            isSubscribed = false;

            updateBtn();
        });
}


function initialiseUI() {

    pushButton.addEventListener('click', function () {
        pushButton.disabled = true;
        if (isSubscribed) {
            unsubscribeUser();
        } else {
            subscribeUser();
        }
    });

    // Set the initial subscription value
    swRegistration.pushManager.getSubscription()
        .then(function (subscription) {
            isSubscribed = !(subscription === null);

            if (isSubscribed) {
                console.log('User IS subscribed.');
            } else {
                console.log('User is NOT subscribed.');
            }

            updateBtn();
        });
}






